/**
 * 遇到的问题
 * 1. 在调整细节的时候，发现跟参考答案的字体明显有差异，参考答案的会稍微粗一点点！核对了几遍之后，
 *    都没看到样式上有什么差别。最后，对比两边的computed style，在最底部"Rendered Fonts"一栏
 *    发现两边的字体使用的不一致。我使用的是Open Sans Light、Open Sans SemiBold，而参考答案
 *    使用的是Open Sans、Open Sans SemiBold。 原来引入的url有一点差异，我引入的是600,300
 *    weight，而另一边是600,400weight。
 *    竟然还能通过这种方式控制字体！ 最后，computed style这个工具真是好用，竟然能看渲染字体。
 *
 * 2. timeline上的圆圈外面又一个白色的"光晕"。我一开始想到的是使用outline，但是我后来发现参考答案
 *    使用的是box-shadow。我用了一下outline，才发现outline没有outline-radius这样的属性（只有F
 *    F有）。难怪各个ui库 input组件的outline都用box-shadow来实现，因为box-shadow会跟着border-
 *    radius弯曲。
 *
 * 3. 在实现那个input的动画的时候，实在不知道要怎么让input在隐藏的时候，不会拦截掉menu-icon的click。
 *    最后，我想了一个丑陋的方案（跟参考答案相比），隐藏的时候，z-index: -1，显示的时候，z-index设高。
 *    当 **隐藏动画完成** 之后，再把z-index设置为-1。这就需要动用js了。这当中最烦的部分就是z-index会
 *    影响动画的进行，因为它无法transition，会立即生效。但是如果不用z-index，把input放到"幕后"，我又
 *    不知道如何让前面的input不影响后面的menu-icon click。
 *
 *    看了参考答案之后才发现，真的是可以让z-index高的element不挡住z-index低的element的鼠标事件......
 *    使用pointer-event: none就可以了。这个就是参考答案优雅的地方！
 *
 * 4. transition-time 0.2s/0.3s 真是一个黄金时间，适用于大部分transition。
 *
 * 5. 忘记实现notification item的动画。感觉自己对动画的理解力还是不够。
 *
 */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

.v-h-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

.h-center {
  display: flex;
  justify-content: center;
}

@h-padding: 20px;

body {
  height: 100vh;
  width: 100vw;

  .v-h-center();
}

@import url(https://fonts.googleapis.com/css?family=Open+Sans:600,400);

@light-blue: #B2DAFF;
@blue: #5F98CD;
@dark-blue: #264057;

.container {
  height: 400px;
  width: 400px;
  border-radius: 3px;
  box-shadow: 1px 2px 10px 0 rgba(0, 0, 0, 0.3);
  background-color: @dark-blue;
  color: #666666;
  font-family: "Open Sans", Helvetica, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  position: relative;

  .v-h-center();
  overflow: hidden;

}
.container > .sidebar-menu {
  position: absolute;
  z-index: 10;
  transition: transform ease-in-out 0.5s;

  width: 170px;
  height: 270px;
  padding: 10px 0;
  background-color: #43627D;
  box-shadow: 3px 3px 9px 0 rgba(0, 0, 0, 0.3);
  border-radius: 3px;
  left: 100px;

  ul {
    list-style-type: none;
    li {
      cursor: pointer;
      padding: 18px 17px;
      font-size: 14px;
      line-height: 1;
      color: #93B2CD;
      > .fa {
        margin-right: 8px;
      }
      transition: background-color ease-in-out 0.3s, color ease-in-out 0.3s;
    }
    li:hover {
      color: white;
      background-color: #38526E;
    }
  }
}
.container > .notifications-card {
  z-index: 20;
  width: 300px;
  height: 300px;
  border-radius: 3px;
  overflow: hidden;
  box-shadow: 10px 10px 15px 0 rgba(0, 0, 0, 0.3);
  background: white;
  transition: transform ease-in-out 0.5s;

  display: flex;
  flex-direction: column;
}
.container.show-sidebar {
  > .sidebar-menu {
    transform: translateX(-50px);
  }
  > .notifications-card {
    transform: translateX(150px);
  }
}

.notifications-card > header {
  display: flex;
  height: 60px;
  background-color: @blue;
  color: white;
  padding: 0 @h-padding;
  justify-content: space-between;
  align-items: center;
  position: relative;

  > input {
    opacity: 0;
    transition: opacity ease-in-out 0.4s, transform ease-in-out 0.4s;
    position: absolute;
    height: 34px;
    width: 230px;
    font-size: 13px;
    border-radius: 50px;
    padding: 0 1em;
    left: 13px;
    border: 0;
    transform: translateX(10px);
    pointer-events: none;
    &:focus {
      outline: 0;
    }
    &.active {
      pointer-events: all;
      transform: translateX(0);
      opacity: 1;
    }
  }
}

.notifications-card > header .menu-icon {
  width: 29px;
  height: 15px;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  cursor: pointer;
  &__dash {
    background-color: @light-blue;
    transition: ease-in-out background-color 0.3s;
    height: 3px;
    border-radius: 3px;

    &:first-child {
      width: 20px;
      position: relative;
      &::after {
        content: ' ';
        display: block;
        width: 7px;
        height: 7px;
        border-radius: 50%;
        transition: ease-in-out background-color 0.3s;
        background-color: @light-blue;
        position: absolute;
        right: -9px;
        top: -2px;
      }
    }
  }

  &:hover {
    .menu-icon__dash {
      background-color: white;
      &:first-child {
        &::after {
          background-color: white;
        }
      }
    }
  }
}

.notifications-card > header .title {
  font-weight: 600;
  font-size: 15px;
}

.notifications-card > header .title {
  font-weight: 600;
  font-size: 15px;
}
.notifications-card > header .fa.fa-search {
  font-size: 21px;
  cursor: pointer;
  color: @light-blue;
  transition: all ease-in-out 0.2s;
  &:hover {
    color: white;
  }
}

.notifications-card > .notifications {
  padding: 0 27px;
  flex: 1;
  min-height: 0;
  position: relative;
  &::before {
    position: absolute;
    left: 24px;
    top: 0;
    content: ' ';
    display: block;
    height: 100%;
    width: 3px;
    background-color: #EBEBEB;
  }
}

.notifications-card > .notifications .notifications__item {
  cursor: pointer;
  &--active,
  &:hover {
    color: @blue;
  }
  padding-left: 16px;
  padding-bottom: 25px;
  &:first-child {
    padding-top: 25px;
    &::before {
      top: 26px;
    }
  }

  position: relative;
  &::before {
    box-shadow: 0 0 0 3px white;
    box-sizing: border-box;
    content: ' ';
    display: block;
    height: 11px;
    width: 11px;
    border: 2px solid @blue;
    border-radius: 50%;
    position: absolute;
    left: -7px;
    top: -1px;
    background-color: white;
  }

  time.item__time {
    display: block;
    font-size: 11px;
    margin-bottom: 2px;
  }
  p.item__content {
    font-size: 15px;

    line-height: 20 / 15;
  }

  opacity: 0;
  .item-animation (@index) when (@index > 0) {
    .item-animation(@index - 1);
    &:nth-child(@{index}) {
      animation: notification-item-animation 0.5s ease-out forwards 0.2s * @index;
    }
  }
  .item-animation(3);
}

@keyframes notification-item-animation {
  0% {
    opacity: 0;
    transform: translate3d(0, 60px, 0);
  }

  100% {

    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}
