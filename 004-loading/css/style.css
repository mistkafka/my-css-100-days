/**
 * 我一开始的思路是把动画分成6个阶段，也就是三个圆的放大、缩小的过程。
 * 但是答案的实现更好，它只把动画分成三个阶段，也就是放大的那三个，缩
 * 小的部分直接使用`animation-fill: alternate`
 */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
.v-h-center {
  display: flex;
  align-items: center;
  justify-content: center;
}
body {
  height: 100vh;
  width: 100vw;
  display: flex;
  align-items: center;
  justify-content: center;
}
.container {
  height: 400px;
  width: 400px;
  background: #E56262;
  display: flex;
  align-items: center;
  justify-content: center;
}
.container .loading .dot {
  background-color: white;
  border-radius: 50%;
}
.container .loading .dot-1 {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 90px;
  height: 90px;
  animation: jump-jump-1 2s cubic-bezier(0.21, 0.98, 0.6, 0.99) infinite alternate;
}
.container .loading .dot-1 .dot-2 {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 60px;
  height: 60px;
  animation: jump-jump-2 2s cubic-bezier(0.21, 0.98, 0.6, 0.99) infinite alternate;
}
.container .loading .dot-1 .dot-2 .dot-3 {
  width: 30px;
  height: 30px;
  animation: jump-jump-3 2s cubic-bezier(0.21, 0.98, 0.6, 0.99) infinite alternate;
}
@keyframes jump-jump-1 {
  0%,
  10% {
    box-shadow: 2px 2px 2px 0 rgba(0, 0, 0, 0.2);
    transform: scale(0);
  }
  100% {
    box-shadow: 10px 10px 15px 0 rgba(0, 0, 0, 0.3);
    transform: scale(1);
  }
}
@keyframes jump-jump-2 {
  0%,
  40% {
    box-shadow: 2px 2px 2px 0 rgba(0, 0, 0, 0.2);
    transform: scale(0);
  }
  100% {
    box-shadow: 10px 10px 15px 0 rgba(0, 0, 0, 0.3);
    transform: scale(1);
  }
}
@keyframes jump-jump-3 {
  0%,
  70% {
    box-shadow: 2px 2px 2px 0 rgba(0, 0, 0, 0.2);
    transform: scale(0);
  }
  100% {
    box-shadow: 10px 10px 15px 0 rgba(0, 0, 0, 0.3);
    transform: scale(1);
  }
}
/*# sourceMappingURL=style.css.map */